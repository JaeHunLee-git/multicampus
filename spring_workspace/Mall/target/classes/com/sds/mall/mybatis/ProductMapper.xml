<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Product">
	
	<insert id="insert" parameterType="Product">
		insert into product(product_name, brand, price, filename, detail, subcategory_idx)
		values(#{product_name}, #{brand}, #{price}, #{filename}, #{detail}, #{subCategory.subcategory_idx})
		
		<!-- 위의 insert 실행 직 후, 이 insert 에 의해 발생된 pk 값을 얻어오기 
			oracle : select seq_product.currval as product_id from dual
		-->
		<selectKey 
			keyColumn="product_idx" 
			resultType="int" 
			keyProperty="product_idx"
			order="AFTER">
			select last_insert_id() as product_idx 
		</selectKey>
	</insert>
	
	<!-- 모든 상품 가져오되, 부모테이블인 subcategory와 조인하여 가져오기 
		MyBatis를 SQL Mapper라 부르는 이유
		쿼리문과 자바객체와의 매핑을 자동으로 처리한다고 해서, SQLMapper 
		따라서 아래의 태그의  resultType에 명시된  Product 와  컬럼명이 일치해야 자동 매핑을 일으킴..
		subname은 매핑될 수 없으므로, 자동 매핑 방법이 아닌 개발자가 수동으로 매핑을 시도해야 함  
		
		resultMap은 레코드 수만큼 호출됨. ex) 상품의 수가 15개 라면 이 resultMap도 15번 매핑이 일어난다
	-->
	<resultMap type="Product" id="ProductMap">
		<id 			column="product_idx" 		property="product_idx"/> <!-- pk 컬럼만 id 태그로 감 -->
		<result 		column="product_name" 	property="product_name"/>
		<result 		column="brand" 				property="brand"/>
		<result 		column="price" 					property="price"/>
		<result 		column="filename" 			property="filename"/>
		<!-- product 레코드 한건 담을때, subcategory 테이블로부터 해당 부모를 여기서 조회하면 됨 
			자식인 product 테이블기준으로는 부모인 subcategory와는 1:1 관계이므로, 이때의 관계를 mybatis association
		-->
		<association column="subcategory_idx" property="subCategory" 
			javaType="SubCategory" 
			select="SubCategory.select"/>
	</resultMap>
	
	<select id="selectAll" resultMap="ProductMap">
		select  product_idx, product_name, brand, price,  filename, subcategory_idx 
		from product		
	</select>
	
</mapper>









