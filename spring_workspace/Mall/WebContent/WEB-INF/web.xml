<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>Mall</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- 
		톰켓이 가동될때 메모리에 인스턴스가 생성되는 객체가 바로  application 내장 객체로 불리는 ServletContext 이다 
		서블릿의 경우엔 톰켓 가동 이후에 최초에 접속되는 사용자에 의해 서블릿의 인스턴스가 생성되므로, 
		Model 영역을 공유하는 용도로는 사용되기 힘들다...따라서 서블릿의 존재보다도 더 시간적으로 앞서면서도 
		모든 서블릿들이 언제나 접근할 수 있는 객체가 바로 ServletContext 이다. 따라서 이 ServletContext 객체에 
		스프링 컨테이너인 ApplicationContext를 붙여놓고, 이 컨테이너가 사용할 xml에 모델 영역의 객체들을 등록해놓으면 
		Tomcat 가동과 함께 모델 영역의 컴포넌트 빈들인 @Service, @Repository, @Component 등등의 객체들이 
		언제나 접근할 수 있는 공유 영역화 되는 효과를 누릴수 있다.. 
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>	
	
	<!-- 어플리케이션 내장 객체가 태어날때 무언가 전달할게 있다면 아래의 param 태그로 전달..
		마치 서블릿이 태어날때 전달할게 있다면 init-param 이용하듯..
	 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/root-context.xml</param-value>
	</context-param>
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 관리자 요청을 처리하는 대표 컨트롤러 -->
	<servlet>
		<servlet-name>adminServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/admin-context.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>adminServlet</servlet-name>
		<url-pattern>/admin/*</url-pattern>
	</servlet-mapping>

	<!-- 쇼핑몰에서의 요청을 처리하는 대표 컨트롤러 -->
	<servlet>
		<servlet-name>shopServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/shop-context.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>shopServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

 </web-app>




