SQL> create  table  topcategory(
  2  topcategory_idx  number  primary key
  3  , topname  varchar2(20)
  4  );

Table created.

SQL> create sequence  seq_topcategory
  2  increment by 1
  3  start with 1;

Sequence created.

SQL> insert into topcategory(topcategory_idx, topname)
  2  values(seq_topcategory.nextval, 'top');

1 row created.

SQL> insert into topcategory(topcategory_idx, topname)
  2  values(seq_topcategory.nextval, 'down');

1 row created.

SQL> insert into topcategory(topcategory_idx, topname)
  2  values(seq_topcategory.nextval, 'accessory');

1 row created.

SQL> commit;

Commit complete.

SQL> select * from topcategory;

TOPCATEGORY_IDX TOPNAME                                                         
--------------- ----------------------------------------                        
              1 top                                                             
              2 down                                                            
              3 accessory                                                       

SQL> --하위 카테고리 테이블 생성 및 제약조건 부여
SQL> create  table subcategory(
  2  subcategory_idx  number primary key
  3  , subname varchar2(20)
  4  , topcategory_idx number
  5  , constraint fk_topcategory_subcategory foreign key(topcategory_idx)
  6     references  topcategory(topcategory_idx)
  7  );

Table created.

SQL> create  sequence  seq_subcategory
  2  increment by 1
  3  start with 1;

Sequence created.

SQL> insert into subcategory(subcategory_idx, subname, topcategory_idx)
  2  values(seq_subcategory.nextval, 'gadigan',1);

1 row created.

SQL> insert into subcategory(subcategory_idx, subname, topcategory_idx)
  2  values(seq_subcategory.nextval, 'neat',1);

1 row created.

SQL> insert into subcategory(subcategory_idx, subname, topcategory_idx)
  2  values(seq_subcategory.nextval, 'jumper',1);

1 row created.

SQL> insert into subcategory(subcategory_idx, subname, topcategory_idx)
  2  values(seq_subcategory.nextval, 'jean',2);

1 row created.

SQL> insert into subcategory(subcategory_idx, subname, topcategory_idx)
  2  values(seq_subcategory.nextval, 'skirt',2);

1 row created.

SQL> insert into subcategory(subcategory_idx, subname, topcategory_idx)
  2  values(seq_subcategory.nextval, 'ring',3);

1 row created.

SQL> insert into subcategory(subcategory_idx, subname, topcategory_idx)
  2  values(seq_subcategory.nextval, 'necklace',3);

1 row created.

SQL> commit;

Commit complete.

SQL> select * from topcategory;

TOPCATEGORY_IDX TOPNAME                                                         
--------------- ----------------------------------------                        
              1 top                                                             
              2 down                                                            
              3 accessory                                                       

SQL> select * from subcategory;

SUBCATEGORY_IDX SUBNAME                                  TOPCATEGORY_IDX        
--------------- ---------------------------------------- ---------------        
              1 gadigan                                                1        
              2 neat                                                   1        
              3 jumper                                                 1        
              4 jean                                                   2        
              5 skirt                                                  2        
              6 ring                                                   3        
              7 necklace                                               3        

7 rows selected.

SQL> --내일 부터는 정규화에 의해 찢어진 테이블을 마치 하나의 테이블 처럼
SQL> --편하게 볼 수 있는 즉 테이블을 합쳐서 보여주는 select문을 학습
SQL> --join문 이라고 한다.
SQL> spool off
