<%@ page contentType="text/html;charset=utf-8"%>
<%
	//스크립틀릿 영역으로써 , 자바 및  jsp 로직을 작성하는 영역 

	//웹브라우저에서 전송되어 온, 데이터를 받아보자
	//클라이언트의 요청이 있을때마다 해당 요청 정보를 가진 내장 객체를 가리켜  request객체라하며
	//요청이 있을때 메모리에 인스턴스가 생성되어 진다..또한 이름이 이미 정해져 있이므로 다른명칭
	//못쓴다 

	//클라이언트가 요청시 함께 가져온 변수를 이용하여, 그 값을 꺼낼 수 있다..
	//클라이언트인 웹브라우저가 전송하는 모든 데이터는 String 으로 전송되어 진다

	//클라이언트가 전송한 id 파라미터의 값을 추출하여 m_id 변수에 담음
	String m_id = request.getParameter("id");
	String m_pass = request.getParameter("pass");

	//결론: 내장객체 중 request  는 결국 클라이언트의 요청 정보를 담고 있는 객체이다!!

	//내장 객체 중, out  객체를 이용하여 클라이언트 인 웹브라우저에 응답할 정보를 저장한다 
	//아래의 코드에서 out.print()  에 의해 클라이언트에게 문자열을 전송한다고 오해하여 안됌!!!
	//응답을 담당하는 response 객체에게 , 어떤 문자열을 전송할지를 등록하는 과정..
	//out.print("클라이언트가 전송한 아이디는 "+m_id+"<br>");//바로 전송 아님
	//out.print("클라이언트가 전송한 비번은 "+m_pass+"<br>"); //바로 전송 아님

	//reponse 객체가 보유한 출력스트림에 문자열을 모으고 있다가 , 현재 스크립트가 다 실행된 후
	//응답 객체가 완성되면, 톰켓이 나서서, 이 응답객체를 분석하여 새로운 html 문서를 만들고 
	//그 문서를 Tomcat이 클랑리언트에게 전송한 후 네트워크를 끊어버린다..	

	out.print("<script>");
	out.print("alert('아이디는 "+m_id+"');");
	out.print("</script>");
%>
