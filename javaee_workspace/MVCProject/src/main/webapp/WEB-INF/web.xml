<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>MVCProject</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>default.htm</welcome-file>
	</welcome-file-list>
	
	<!-- 서블릿보다 앞서 실행되는 필터를 등록한다 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>com.sds.mvcproject.common.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--  
		어플케이션의 모든 요청을 하나의 진입점으로 몰아서 요청을 받을 대표 컨트롤러인 
		서블릿을 매핑 (하나의 진입점으로 몰았을때 장점) 
		매 요청마다 1:1 대응하는 하위 컨트롤러를 직접 명시하면, 요청의 수가 1000개일때, 서블릿 매핑도
		1000개를 명시해야 한다. ㅜㅜ (유지보수성 효율성 떨어짐)
	 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>com.sds.mvcproject.controller.DispatcherServlet</servlet-class>
		<!-- 서블릿이 초기화될때, 무언가 정보를 전달할 것이 있다면, 여기서 파라미터를 이용하여 
			텍스트 데이터를 전달할 수 있다
			DispatcherServlet 클래스 안에, 아래의 매핑 파일 경로를 하드코딩하면, 추후 유지보수성이
			떨어지므로, 외부의 설정파일에서 파일명을 명시해둔다..(추후 파일명의 변경이나 경로 변경에 의해
			DispatcherServlet 클래스를 다시 열 필요가 없도록 하기 위해..)
		 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/mapping.txt</param-value>
		</init-param>
	</servlet>	
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
</web-app>
















